# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="<w5qkqbEbAnl2JCiP4eI9;b3aP[V]wEIo9Lw]f4`kYhS>h[0A;b25^B:lJak5^6n"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global= org.alfresco.analytics.client.Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

#db.default.driver=com.mysql.jdbc.Driver
#db.default.url="jdbc:mysql://localhost/cloudtimr"
#db.default.user=root
#db.default.pass="a strong password"

# my configuration for slick
slick.db.driver = scala.slick.driver.MySQLDriver

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
#logger.root=WARN

# Logger used by the framework:
#logger.play=INFO

# Logger provided to your application:
#logger.application=DEBUG

#play.modules.enabled += "modules.MyModule"
#play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoModule"

#logger.app=WARN

# Application deplyment
# application.context=/cloudtimr/

smtp.host=localhost
smtp.port=25
#smtp.ssl (defaults to no)
#smtp.tls (defaults to no)
#smtp.user (optional)
#smtp.password (optional)

#play.application.loader = "misc.CustomApplicationLoader"

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  default-dispatcher.fork-join-executor.pool-size-max=64
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  loglevel = "DEBUG"

  actor {
    debug.receive = on
    provider = "akka.remote.RemoteActorRefProvider"
    #    deployment {
    #      /entities {
    #        remote = "akka.tcp://analytics@127.0.0.1:2552"
    #      }
    #    }
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2553
    }
  }
}

oauth2.provider {
  facebook {
    clientId=166091033581448
    clientSecret=8a3dfcee20fd30093b4fcf34aa3b17a7
  }
  google {
    clientId=461220447949.apps.googleusercontent.com
    clientSecret=qJWpAqAncYTNttHPZT3VgPTg
  }
}

kafka {
  consumer {
    topic = "alfresco.repo.activities"
    group.id = "group1"
    zookeeper.connect = "localhost:2181"
    auto.offset.reset = "smallest"
    consumer.timeout.ms = "-1"
  }
}